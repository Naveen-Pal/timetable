name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black isort bandit
    
    - name: Create test CSV files
      run: |
        echo "Time Slot,Monday,Tuesday,Wednesday,Thursday,Friday" > "Time Slots.csv"
        echo "08:00-09:00,T1,T2,T3,T4,T5" >> "Time Slots.csv"
        echo "09:00-10:00,T6,T7,T8,T9,T10" >> "Time Slots.csv"
        
        echo "Course Code,Course Name,Credit,Lecture Time,Tutorial Time,Lab Time,Lecture Location,Tutorial Location,Lab Location" > "Updated_Processed_Timetable.csv"
        echo "CS101,Programming,3,T1,T2,,Room 101,Room 102," >> "Updated_Processed_Timetable.csv"
        echo "MATH201,Calculus,4,T3,T4,T5,Room 201,Room 202,Lab 301" >> "Updated_Processed_Timetable.csv"
    
    - name: Lint code
      run: |
        flake8 app.py test_app.py --max-line-length=127 --statistics || true
        black --check app.py test_app.py || true
        isort --check-only app.py test_app.py || true
    
    - name: Security check
      run: |
        bandit app.py --quiet || true
    
    - name: Run tests
      run: |
        pytest test_app.py -v

  docker-test:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
    - uses: actions/checkout@v4
    
    - name: Build and test Docker
      run: |
        docker build -t timetable-app .
        docker run -d -p 80:80 --name test-container timetable-app
        sleep 10
        curl -f http://localhost:80 || exit 1
        docker stop test-container
        docker rm test-container 